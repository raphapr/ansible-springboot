---
- name: "Check for required inventory springboot_application_name variable"
  fail:
    msg: springboot_application_name variable is required and should be defined in you inventory
  when: springboot_application_name == 'None'

- name: "Check for required inventory springboot_src_file or springboot_src_url variable"
  fail:
    msg: springboot_src variable or springboot_src_url is required and should be defined in you inventory
  when:
    - springboot_src_file == 'None'
    - springboot_src_url == 'None'

- name: os-specific vars
  include_vars: "{{ ansible_os_family }}.yml"

- name: "Install java"
  include: java.yml
  when: springboot_java_install

- name: "Create group for springboot app"
  group:
    name: "{{ springboot_group }}"
    state: present

- name: "Create user for springboot app"
  user:
    name: "{{ springboot_user }}"
    group: "{{ springboot_group }}"
    state: present

- name: "Create deploy folder if not exists"
  file:
    path: "{{ springboot_deploy_folder }}"
    state: directory
    owner: "{{ springboot_user }}"
    group: "{{ springboot_group }}"

- name: "Copy jar application"
  copy:
    src: "{{ springboot_src_file }}"
    dest: "{{ springboot_deploy_folder }}/{{ springboot_application_name }}.jar"
    owner: "{{ springboot_user }}"
    group: "{{ springboot_group }}"
    mode: "u+x"
  when:
    - springboot_src_file != 'None'
    - springboot_src_file|length > 0
  notify:
    - "Restart application"

- name: "Download springboot application"
  get_url:
    url: "{{ springboot_src_url }}"
    dest: "{{ springboot_deploy_folder }}/{{ springboot_application_name }}.jar"
    owner: "{{ springboot_user }}"
    group: "{{ springboot_group }}"
    mode: "u+x"
  when:
    - springboot_src_url != 'None'
    - springboot_src_url|length > 0
  notify:
    - "Restart application"
  changed_when: springboot_force_deploy
  tags: springboot-deploy

- name: "Deploy app properties"
  template:
    src: "{{ springboot_propertyfile_template }}"
    dest: "{{ springboot_deploy_folder }}"
    owner: "{{ springboot_user }}"
    group: "{{ springboot_group }}"
  when: springboot_propertyfile_template != 'None'
  notify:
    - "Restart application"
  tags: springboot-deploy

- name: "Deploy app config"
  template:
    src: "{{ springboot_configuration_template }}"
    dest: "{{ springboot_deploy_folder }}"
    owner: "{{ springboot_user }}"
    group: "{{ springboot_group }}"
  when: springboot_configuration_template != 'None'
  notify:
    - "Restart application"
  tags: springboot-deploy


- name: Install as service
  include: service.yml
  tags: springboot-deploy
